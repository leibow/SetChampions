Protocol

Client: 
Client sees screen and chooses to either login or register.
On Both Login & Register: He sends user/pass to server, and waits for yes/no response.

Now, he is logged in, and is entered into the game with 0 gamepoints(gp), and a certain amount of userpoints (up), based on his history.
Here's the problem.
The player needs to listen for new boards, but he also needs to be able to send a move as well. How do you do this in code. What function listens while also waiting. 
Some type of event listener...
Don't really want two sockets because thats clunky. Requiring the player to open two sockets when he connects in.....


Server:
Server exists for a single game, for the time being.
1) new Game() -> creates playerserver array and board object.
2) wait for players -> new PlayerServer(s,game) for each client connection.

-> PlayerServer = game,socketInfo,player object:
1) Set Player Object, by getting username and password and checking/inserting into DB.
2) Send Player the game info.
3) Add player to game.
4) Wait For Moves -> checkMove() when receiving new move from player

-> checkMove():
if yes = sendInfo to all players, by using the playerserver methods.
	note: this communication is still on the checkMove() thread. the other threads are still listening for moves.
if no = send "No" to this player
  

Info = Board.toString() + List of All Players with their point values.